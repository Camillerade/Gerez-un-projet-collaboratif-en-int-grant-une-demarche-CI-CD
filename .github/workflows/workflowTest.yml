name: Test Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 11 (for Backend)
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Compile Backend
        run: mvn compile
        working-directory: back
      - name: Test Backend Unitaires
        run: mvn test
        working-directory: back
      - name: Créer le répertoire target pour le Backend si nécessaire
        run: |
          if [ ! -d "back/target" ]; then
            mkdir -p back/target
          fi
        shell: bash
      - name: Générer le rapport de test pour le Backend
        run: |
          cat back/target/surefire-reports/*.xml > back/target/test-report-backend.xml
        shell: bash
      - name: Set up Node.js (for Frontend)
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Installer dépendances
        run: npm install --legacy-peer-deps
        working-directory: front
      - name: Compiler Frontend
        run: npm run build
        working-directory: front
      - name: Tester Frontend
        run: npm run test -- --watch=false --browsers=ChromeHeadless
        working-directory: front
      - name: Créer le répertoire target pour le Frontend si nécessaire
        run: |
          if [ ! -d "front/target" ]; then
            mkdir -p front/target
          fi
        shell: bash
      - name: Générer le rapport de test pour le Frontend
        run: |
          cat front/test-results.xml > front/target/test-report-frontend.xml
        shell: bash
      - name: Stocker les rapports de test dans la workspace
        run: |
          mkdir -p $GITHUB_WORKSPACE/reports
          cp back/target/test-report-backend.xml $GITHUB_WORKSPACE/reports/
          cp front/target/test-report-frontend.xml $GITHUB_WORKSPACE/reports/
        shell: bash
      - name: Télécharger les rapports de test
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: $GITHUB_WORKSPACE/reports
