name: Complete CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main 

jobs:
  build-and-test:
    runs-on: ubuntu-latest
  
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 11 (for Backend)
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'

    # ----------- Backend Steps -----------    
    - name: Build Backend with Maven
      run: mvn clean install
      working-directory: back
      if: success()

    - name: Run Backend Tests
      run: mvn test
      working-directory: back
      if: success()

    - name: Generate Backend Test Report
      run: mvn jacoco:report
      working-directory: back
      if: success()

    - name: Upload Backend Test Report
      uses: actions/upload-artifact@v4
      with:
        name: backend-test-report
        path: back/target/site/jacoco/
      if: success()

    - name: Build Backend Docker Image
      run: docker build -t bobapp/back:latest back
      if: success()

    - name: Set up SonarQube for Backend Analysis
      uses: sonarsource/sonarcloud-github-action@v2
      with:
        sonarOrganization: ${{ secrets.SONAR_ORGANIZATION }}
        sonarProjectKey: ${{ secrets.SONAR_BACKEND_PROJECT_KEY }}
        sonarToken: ${{ secrets.SONARQUBE_TOKEN }}
        projectBaseDir: back

    - name: Run SonarQube Analysis for Backend
      run: mvn sonar:sonar -Dsonar.projectKey=${{ secrets.SONAR_BACKEND_PROJECT_KEY }}
      working-directory: back
      if: success()

    # ----------- Frontend Steps -----------

    - name: Set up Node.js (for Frontend)
      uses: actions/setup-node@v3
      with:
        node-version: '18'  # Ensure you're using a supported version

    - name: Install Frontend Dependencies
      run: npm install --legacy-peer-deps
      working-directory: front

    - name: Build Frontend
      run: npm run build
      working-directory: front
      if: success()

    - name: Run Frontend Tests (with Headless Chrome)
      run: npm run test -- --watch=false --browsers=ChromeHeadless
      working-directory: front
      if: success()

    - name: Create Frontend Docker Image
      run: docker build -t bobapp/front:latest front
      if: success()

    - name: Set up SonarQube for Frontend Analysis
      uses: sonarsource/sonarcloud-github-action@v2
      with:
        sonarOrganization: ${{ secrets.SONAR_ORGANIZATION }}
        sonarProjectKey: ${{ secrets.SONAR_FRONTEND_PROJECT_KEY }}
        sonarToken: ${{ secrets.SONARQUBE_TOKEN }}
        projectBaseDir: front

    - name: Run SonarQube Analysis for Frontend
      run: |
        npm install sonar-scanner --save-dev
        npx sonar-scanner \
          -Dsonar.projectKey=${{ secrets.SONAR_FRONTEND_PROJECT_KEY }} \
          -Dsonar.sources=src
      working-directory: front
      if: success()
